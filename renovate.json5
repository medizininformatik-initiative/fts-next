{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:best-practices',
    ':automergeMinor',
    ':automergeDigest',
    ':maintainLockFilesWeekly',
    'customManagers:githubActionsVersions',
  ],
  description: [
    "We use `ignorePaths` to mitigate :ignoreModulesAndTests, which would ignore java test classes",
    "and test compose files."
  ],
  ignorePaths: [
    '**/node_modules/**',
    '**/bower_components/**',
  ],
  prConcurrentLimit: 3,
  packageRules: [
    {
      description: [
        "Group Jackson Updates"
      ],
      groupName: 'jackson',
      matchPackageNames: [
        '/com.fasterxml.jackson/',
      ],
    },
    {
      description: [
        "Group HAPI Updates"
      ],
      groupName: 'hapi',
      matchPackageNames: [
        '/ca.uhn.hapi.fhir/',
      ],
    },
    {
      description: [
        "Find `deidentifhir` in GitHub Maven packages"
      ],
      matchPackageNames: [
        'de.ume:deidentifhir',
      ],
      registryUrls: [
        'https://maven.pkg.github.com/UMEssen/DeidentiFHIR',
      ],
    },
    {
      description: [
        "Group valkey updates from DockerHub and GitHub"
      ],
      matchPackageNames: [
        'valkey/valkey',
        'valkey-io/valkey',
      ],
      groupName: 'valkey',
    },
    {
      description: [
        "Custom MOSAIC images typically require test data to be updated, too"
      ],
      matchDepNames: [
        'ghcr.io/knoppiks/mosaic-*',
      ],
      automerge: false,
    },
    {
      description: [
        "Spring boot updates may require thorough checking and junit updates"
      ],
      matchDepNames: [
        'org.springframework.boot:*',
      ],
      prHeader: 'Check if there are transitive dependencies that need to be updated, too. e.g. `junit-platform`',
      automerge: false,
    },
    {
      description: [
        "JUnit must be updated alongside spring boot, disable automatic updates"
      ],
      matchDepNames: [
        'org.junit.jupiter:*',
        'org.junit.platform:*',
      ],
      enabled: false,
    },
    {
      description: [
        "Group surefire and failsafe updates"
      ],
      matchDepNames: [
        'org.apache.maven.plugins:maven-surefire-plugin',
        'org.apache.maven.plugins:maven-failsafe-plugin',
      ],
      groupName: 'maven-surefire+failsafe',
    },
    {
      description: [
        "Exclude slsa-github-generator from digest pinning.",
        "See https://github.com/slsa-framework/slsa-github-generator/issues/722"
      ],
      matchManagers: [
        'github-actions',
      ],
      matchDepNames: [
        'slsa-framework/slsa-github-generator',
      ],
      matchUpdateTypes: [
        'pinDigest',
      ],
      enabled: false,
    },
    {
      description: [
        "Pin GitHub actions to a specific version, rather than major only"
      ],
      groupName: 'actions/pin-versions',
      matchDepTypes: [
        'action',
      ],
      extractVersion: '^(?<version>v\\d+\\.\\d+\\.\\d+)$',
      versioning: 'regex:^v(?<major>\\d+)(\\.(?<minor>\\d+)\\.(?<patch>\\d+))?$',
    },
  ],
  hostRules: [
    {
      description: [
        "Authenticate against GitHub API"
      ],
      matchHost: 'github.com',
      token: '{{ secrets.GITHUB_COM_TOKEN }}',
    },
  ],
  customManagers: [
    {
      description: [
        "Find `// renovate` annotated dependencies in Java source code"
      ],
      customType: 'regex',
      managerFilePatterns: [
        '/.*\\.java/',
      ],
      matchStrings: [
        '// renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\s]+?)(?: (?:packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?\\n[^\\n]+[A-Za-z0-9_]+?_VERSION\\s*=\\s*"(?<currentValue>.+?)";',
      ],
    },
  ],
}
