name: Pages

on:
  push:
    tags: [ "v*.*.*" ]
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  merge_group:
  workflow_dispatch:

# Declare default permissions as read only.
permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      MAVEN_ARGS: -B -U -T1C -Dfts.retryTimeout=false
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Used in `settings.xml` generated by actions/setup-java
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Set up JDK 21
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
      with:
        distribution: 'temurin'
        java-version: 21
        cache: 'maven'

    - name: Build Images
      run: make all

    - name: Get Latest Release Tag using GitHub Script
      id: gh_latest_tag
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        script: |
          const latestRelease = await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });

          const latestTag = latestRelease.data.tag_name || "v0.0.0"; // Default if no release
          console.log(`Latest tag: ${latestTag}`);
          core.setOutput("latest_tag", latestTag);

    - name: Clear Application Yamls
      working-directory: .github/test
      run: echo "" | tee cd-agent/application.yaml rd-agent/application.yaml tc-agent/application.yaml

    - name: Build OpenAPI Specs
      working-directory: docs
      run: make generate-openapi

    - name: Setup Node
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: 21
        cache: npm
        cache-dependency-path: 'docs/package-lock.json'

    - name: Build Documentation
      working-directory: docs
      env:
        DOCS_BASE: "/${{ github.event.repository.name }}/"
        VITE_LATEST_RELEASE: ${{ steps.gh_latest_tag.outputs.latest_tag }}
      run: make build

    - name: Setup Pages
      uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
      with:
        path: docs/.vitepress/dist

  deploy:
    if: github.ref_name == github.event.repository.default_branch
    runs-on: ubuntu-24.04
    needs: [ build ]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        egress-policy: audit

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
