name: Build

on:
  push:
    tags: [ "v*.*.*" ]
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  merge_group:

jobs:
  test:
    env:
      MAVEN_ARGS: -B -T1C -Dfts.retryTimeout=false
      GITHUB_TOKEN: ${{ github.token }}
    runs-on: ubuntu-24.04
    strategy:
      max-parallel: 6
      matrix:
        agent:
        - clinical-domain-agent
        - trust-center-agent
        - research-domain-agent

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Set up JDK 21
      uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
      with:
        distribution: 'temurin'
        java-version: 21
        cache: 'maven'

    - name: Setup Keycloak
      working-directory: .github/test
      run: docker compose -f oauth2/compose.yaml up --build --wait

    - name: Run Tests
      run: mvn ${MAVEN_ARGS} verify --also-make --projects ${{ matrix.agent }}

    - name: Generate Code Coverage Report
      run: mvn ${MAVEN_ARGS} jacoco:report-aggregate@report

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  build-jar:
    needs: [ test ]
    env:
      MAVEN_ARGS: -B -T1C -Dfts.retryTimeout=false
      GITHUB_TOKEN: ${{ github.token }}
      COMMIT_TAG: ${{ github.ref_type == 'tag' && github.ref_name || '' }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        agent:
        - clinical-domain-agent
        - trust-center-agent
        - research-domain-agent
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Set up JDK 21
      uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
      with:
        distribution: 'temurin'
        java-version: 21
        cache: 'maven'

    - name: Build Agent
      run: mvn ${MAVEN_ARGS} -DskipTests package ${COMMIT_TAG:+-Drevision=${COMMIT_TAG#v}}

    - name: Upload Jar
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: ${{ matrix.agent }}
        path: ${{ matrix.agent }}/target/${{ matrix.agent }}.jar
        if-no-files-found: error

  build-image:
    needs: [ build-jar ]
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        agent:
        - clinical-domain-agent
        - trust-center-agent
        - research-domain-agent
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Download Agent Jar
      if: ${{ matrix.agent }}
      uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
      with:
        name: ${{ matrix.agent }}
        path: ${{ matrix.agent }}/target

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

    - name: Build and Save Container Image
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
      with:
        context: ${{ matrix.agent }}
        tags: ghcr.io/${{ github.repository_owner }}/fts/${{ matrix.agent }}:local
        outputs: type=docker,dest=/tmp/${{ matrix.agent }}.tar

    - name: Upload Container Image
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: ${{ matrix.agent }}-image
        path: /tmp/${{ matrix.agent }}.tar
        if-no-files-found: error

  scan-image:
    needs: [ build-image ]
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        agent:
        - clinical-domain-agent
        - trust-center-agent
        - research-domain-agent
    steps:
    - name: Download Container Image
      uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
      with:
        name: ${{ matrix.agent }}-image
        path: /tmp

    - name: Load Container Image
      run: docker load --input /tmp/${{ matrix.agent }}.tar

    - name: Run Trivy Vulnerability Scanner
      uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
      with:
        image-ref: ghcr.io/${{ github.repository_owner }}/fts/${{ matrix.agent }}:local
        format: sarif
        output: trivy-results.sarif
        severity: 'CRITICAL,HIGH'
        timeout: '15m0s'
      env:
        TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db:2,public.ecr.aws/aquasecurity/trivy-db:2
        TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db:1,public.ecr.aws/aquasecurity/trivy-java-db:1

    - name: Upload Trivy Scan Results to GitHub Security Tab
      uses: github/codeql-action/upload-sarif@45775bd8235c68ba998cffa5171334d58593da47 # v3
      with:
        sarif_file: trivy-results.sarif

  e2e-tests:
    needs: [ build-image ]
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: .github/test
    env:
      TEST_SET_SIZE: 100

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Download Agent Images
      uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
      with:
        pattern: '*-image'
        merge-multiple: true
        path: /tmp

    - name: Load Agent Images
      run: |
        echo -n "clinical-domain-agent trust-center-agent research-domain-agent" \
        | xargs -d' ' -I{} docker load --input /tmp/{}.tar

    - name: Pull Container Images
      run: make pull

    - name: Configure PATH
      run: echo "${GITHUB_WORKSPACE}/.github/scripts" >> ${GITHUB_PATH}

    - name: Install Blazectl
      run: install-blazectl.sh

    - name: Prepare Auth Failing Tests
      uses: mikefarah/yq@8bf425b4d1344db7cd469a8d10a390876e0c77fd # v4
      with:
        cmd: >-
          cd .github/test/cd-agent/projects &&
          yq '.cohortSelector.trustCenterAgent.server.auth.basic.password = "wrong-password"' example.yaml >basic-fail.yaml &&
          yq 'del(.bundleSender.researchDomainAgent.server.auth)' example.yaml >oauth2-fail.yaml

    - name: Start Test Environment
      run: make start

    - name: Cache Test Data
      id: cache-test-data
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: .github/test/test-data
        key: test-data-${{ env.TEST_SET_SIZE }}

    - name: Download Test Data
      if: steps.cache-test-data.outputs.cache-hit != 'true'
      run: make download

    - name: Upload Test Data
      run: make upload

    - name: Check Consent
      run: make check-consent

    - name: Run e2e for all Consented Patients
      run: |
        make transfer-all PROJECT=example 
        make wait
        make check-status RESULTS_FILE=example.json
        make check-resources RESULTS_FILE=example.json

    - name: Clean RD HDS and gPAS DB
      run: make clean-rd-hds-and-gpas-db

    - name: Run e2e for Selected Patients
      run: |
        make transfer-list PROJECT=example 
        make wait
        make check-status RESULTS_FILE=example.json
        make check-resources RESULTS_FILE=example.json

    - name: Run e2e with failing Basic Auth
      run: |
        make transfer-all PROJECT=basic-fail
        make wait
        make check-status RESULTS_FILE=basic-fail.json
        make check-resources RESULTS_FILE=basic-fail.json

    - name: Run e2e with failing OAuth2 Auth
      run: |
        make transfer-all PROJECT=oauth2-fail
        make wait
        make check-status RESULTS_FILE=oauth2-fail.json
        make check-resources RESULTS_FILE=oauth2-fail.json

    - name: Collect Agent Logs
      if: failure() || cancelled()
      run: docker compose logs cd-agent tc-agent rd-agent

    - name: Collect MOSAIC Logs
      if: failure() || cancelled()
      run: docker compose logs gics gpas

    - name: Collect HDS Logs
      if: failure() || cancelled()
      run: docker compose logs cd-hds rd-hds

    - name: Collect DB Logs
      if: failure() || cancelled()
      run: docker compose logs gics-db gpas-db keystore

    - name: Collect OAuth2 Server Logs
      if: failure() || cancelled()
      run: docker compose logs keycloak

  push-image:
    if: github.event_name != 'pull_request' || (github.event.pull_request.base.repo.full_name == github.event.pull_request.head.repo.full_name)
    needs:
    - scan-image
    - e2e-tests
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        agent:
        - clinical-domain-agent
        - trust-center-agent
        - research-domain-agent

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Download Agent Jar
      if: ${{ matrix.agent }}
      uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
      with:
        name: ${{ matrix.agent }}
        path: ${{ matrix.agent }}/target

    - name: Download Container Image
      uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
      with:
        name: ${{ matrix.agent }}-image
        path: /tmp

    - name: Load Container Image
      run: docker load --input /tmp/${{ matrix.agent }}.tar

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

    - name: Login to GHCR
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Container Image Metadata
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
      with:
        images: |
          ghcr.io/${{ github.repository_owner }}/fts/${{ matrix.agent }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and Push Container Image
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
      with:
        context: ${{ matrix.agent }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  create-release:
    needs: push-image
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: .github/release
    permissions:
      contents: write
      actions: write

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Check Link Targets
      run: make check-links

    - name: Create Release Archives
      env:
        COMMIT_TAG: ${{ github.ref_type == 'tag' && github.ref_name || 'latest' }}
      run: make cd-agent tc-agent rd-agent

    - name: Upload Archives
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        path: |
          .github/release/cd-agent.tar.gz
          .github/release/tc-agent.tar.gz
          .github/release/rd-agent.tar.gz
        if-no-files-found: error

    - name: Recognize Prerelease
      env:
        GITHUB_REF: ${{ github.ref_name }}
      # In SemVer 2.0, a prerelease version is always indicated by the presence of a hyphen
      run: |
        if [[ "${GITHUB_REF}" == *-* ]]; then
          echo "is_prerelease=true" >>$GITHUB_ENV
        fi

    - name: Release
      if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2
      with:
        files: |
          .github/release/cd-agent.tar.gz
          .github/release/tc-agent.tar.gz
          .github/release/rd-agent.tar.gz
        draft: true
        prerelease: ${{ env.is_prerelease }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
