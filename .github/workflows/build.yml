name: Build

on:
  push:
    tags: [ "v*.*.*" ]
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  merge_group:

# Declare default permissions as read only.
permissions: read-all

jobs:
  test:
    env:
      MAVEN_ARGS: -B -T1C -Dfts.retryTimeout=false
      GITHUB_TOKEN: ${{ github.token }}
    runs-on: ubuntu-24.04
    strategy:
      max-parallel: 6
      matrix:
        agent: [ clinical-domain-agent, trust-center-agent, research-domain-agent ]

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Set up JDK 21
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
      with:
        distribution: 'temurin'
        java-version: 21
        cache: 'maven'

    - name: Setup Keycloak
      working-directory: .github/test
      run: docker compose -f oauth2/compose.yaml up --build --wait

    - name: Run Tests
      run: mvn ${MAVEN_ARGS} verify --also-make --projects ${{ matrix.agent }}

    - name: Generate Code Coverage Report
      run: mvn ${MAVEN_ARGS} jacoco:report-aggregate@report

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  build-jar:
    needs: [ test ]
    env:
      MAVEN_ARGS: -B -T1C -Dfts.retryTimeout=false
      GITHUB_TOKEN: ${{ github.token }}
      COMMIT_TAG: ${{ github.ref_type == 'tag' && github.ref_name || '' }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        agent: [ clinical-domain-agent, trust-center-agent, research-domain-agent ]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Set up JDK 21
      uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
      with:
        distribution: 'temurin'
        java-version: 21
        cache: 'maven'

    - name: Build Agent
      run: mvn ${MAVEN_ARGS} -DskipTests package ${COMMIT_TAG:+-Drevision=${COMMIT_TAG#v}}

    - name: Upload Jar
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: ${{ matrix.agent }}-jar
        path: ${{ matrix.agent }}/target/${{ matrix.agent }}.jar
        if-no-files-found: error
        retention-days: 7

    - name: Upload Maven SBOM
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: ${{ matrix.agent }}-sbom-mvn
        path: ${{ matrix.agent }}/target/sbom-mvn.json
        if-no-files-found: error
        retention-days: 7

  build-image:
    needs: [ build-jar ]
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        agent: [ clinical-domain-agent, trust-center-agent, research-domain-agent ]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Download Jar
      if: ${{ matrix.agent }}
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
      with:
        name: ${{ matrix.agent }}-jar
        path: ${{ matrix.agent }}/target

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

    - name: Build and Save Container Image
      uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6
      env:
        DOCKER_BUILD_RECORD_UPLOAD: false
        DOCKER_BUILD_SUMMARY: false
      with:
        context: ${{ matrix.agent }}
        tags: ghcr.io/${{ github.repository_owner }}/fts/${{ matrix.agent }}:local
        outputs: type=docker,dest=/tmp/${{ matrix.agent }}.tar

    - name: Upload Container Image
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: ${{ matrix.agent }}-image
        path: /tmp/${{ matrix.agent }}.tar
        if-no-files-found: error

  scan-image:
    needs: [ build-image ]
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        agent: [ clinical-domain-agent, trust-center-agent, research-domain-agent ]
    permissions:
      security-events: write
    steps:
    - name: Download Container Image
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
      with:
        name: ${{ matrix.agent }}-image
        path: /tmp

    - name: Load Container Image
      run: docker load --input /tmp/${{ matrix.agent }}.tar

    - name: Run Trivy Vulnerability Scanner
      uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
      with:
        image-ref: ghcr.io/${{ github.repository_owner }}/fts/${{ matrix.agent }}:local
        format: sarif
        output: trivy-results.sarif
        severity: 'CRITICAL,HIGH'
        timeout: '15m0s'

    - name: Upload Trivy Scan Results to GitHub Security Tab
      uses: github/codeql-action/upload-sarif@ff0a06e83cb2de871e5a09832bc6a81e7276941f # v3
      with:
        sarif_file: trivy-results.sarif

    - name: Generate SBOM
      uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # v0.30.0
      with:
        image-ref: ghcr.io/${{ github.repository_owner }}/fts/${{ matrix.agent }}:local
        format: cyclonedx
        output: sbom-trivy.json
        scan-type: image

    - name: Upload Trivy SBOM
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: ${{ matrix.agent }}-sbom-trivy
        path: sbom-trivy.json
        if-no-files-found: error
        retention-days: 7

  e2e-tests:
    needs: [ build-image ]
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: .github/test
    env:
      TEST_SET_SIZE: 100

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Download Agent Images
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
      with:
        pattern: '*-image'
        merge-multiple: true
        path: /tmp

    - name: Load Agent Images
      run: |
        echo -n "clinical-domain-agent trust-center-agent research-domain-agent" \
        | xargs -d' ' -I{} docker load --input /tmp/{}.tar

    - name: Pull Container Images
      run: make pull

    - name: Configure PATH
      run: echo "${GITHUB_WORKSPACE}/.github/scripts" >> ${GITHUB_PATH}

    - name: Install Blazectl
      run: install-blazectl.sh

    - name: Prepare Auth Failing Tests
      uses: mikefarah/yq@b534aa9ee5d38001fba3cd8fe254a037e4847b37 # v4
      with:
        cmd: >-
          cd .github/test/cd-agent/projects &&
          yq '.cohortSelector.trustCenterAgent.server.auth.basic.password = "wrong-password"' example.yaml >basic-fail.yaml &&
          yq 'del(.bundleSender.researchDomainAgent.server.auth)' example.yaml >oauth2-fail.yaml

    - name: Start Test Environment
      run: make start

    - name: Cache Test Data
      id: cache-test-data
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: .github/test/test-data
        key: test-data-${{ env.TEST_SET_SIZE }}

    - name: Download Test Data
      if: steps.cache-test-data.outputs.cache-hit != 'true'
      run: make download

    - name: Upload Test Data
      run: make upload

    - name: Check Consent
      run: make check-consent

    - name: Run e2e for all Consented Patients
      run: |
        make transfer-all PROJECT=example 
        make wait
        make check-status RESULTS_FILE=example.json
        make check-resources RESULTS_FILE=example.json

    - name: Clean RD HDS and gPAS DB
      run: make clean-rd-hds-and-gpas-db

    - name: Run e2e for Selected Patients
      run: |
        make transfer-list PROJECT=example 
        make wait
        make check-status RESULTS_FILE=example.json
        make check-resources RESULTS_FILE=example.json

    - name: Run e2e with failing Basic Auth
      run: |
        make transfer-all PROJECT=basic-fail
        make wait
        make check-status RESULTS_FILE=basic-fail.json
        make check-resources RESULTS_FILE=basic-fail.json

    - name: Run e2e with failing OAuth2 Auth
      run: |
        make transfer-all PROJECT=oauth2-fail
        make wait
        make check-status RESULTS_FILE=oauth2-fail.json
        make check-resources RESULTS_FILE=oauth2-fail.json

    - name: Collect Agent Logs
      if: failure() || cancelled()
      run: docker compose logs cd-agent tc-agent rd-agent

    - name: Collect MOSAIC Logs
      if: failure() || cancelled()
      run: docker compose logs gics gpas

    - name: Collect HDS Logs
      if: failure() || cancelled()
      run: docker compose logs cd-hds rd-hds

    - name: Collect DB Logs
      if: failure() || cancelled()
      run: docker compose logs gics-db gpas-db keystore

    - name: Collect OAuth2 Server Logs
      if: failure() || cancelled()
      run: docker compose logs keycloak

  combine-sboms:
    needs: [ build-jar, scan-image ]
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        agent: [ clinical-domain-agent, trust-center-agent, research-domain-agent ]
    steps:
    - name: Install CycloneDX CLI
      env:
        # Check the cyclonedx binary against a pinned checksum here, it must be updated accordingly
        # renovate: datasource=github-releases depName=CycloneDX/cyclonedx-cli
        CDX_CLI_VERSION: "0.27.2"
        CDX_CLI_CHECKSUM: "5e1595542a6367378a3944bbd3008caab3de65d572345361d3b9597b1dbbaaa0"
      run: |
        url="https://github.com/CycloneDX/cyclonedx-cli/releases/download/v${CDX_CLI_VERSION}/cyclonedx-linux-x64"
        target="${HOME}/.local/bin/cyclonedx"
        mkdir -p "$(dirname "${target}")"
        wget "${url}" -q
        sha256sum -c <(echo "${CDX_CLI_CHECKSUM} cyclonedx-linux-x64")
        mv cyclonedx-linux-x64 ${target}
        chmod +x "${target}"

    - name: Download SBOMs
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
      with:
        pattern: ${{ matrix.agent }}-sbom-*
        path: .
        merge-multiple: true

    - name: Merge SBOMS
      run: cyclonedx merge --input-files sbom-mvn.json sbom-trivy.json --output-file sbom.json

    - name: Upload Combined SBOM
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: ${{ matrix.agent }}-sbom
        path: sbom.json
        if-no-files-found: error
        retention-days: 7

  push-image:
    if: github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork
    needs: [ scan-image, e2e-tests, combine-sboms ]
    runs-on: ubuntu-24.04
    permissions:
      packages: write
      id-token: write
    strategy:
      matrix:
        agent: [ clinical-domain-agent, trust-center-agent, research-domain-agent ]
    env:
      DIGEST: ${{ needs.build-image.outputs[format('{0}-digest', matrix.agent )]}}

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Download Agent Jar
      if: ${{ matrix.agent }}
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
      with:
        name: ${{ matrix.agent }}-jar
        path: ${{ matrix.agent }}/target

    - name: Download Container Image
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
      with:
        name: ${{ matrix.agent }}-image
        path: /tmp

    - name: Load Container Image
      run: docker load --input /tmp/${{ matrix.agent }}.tar

    - name: Download SBOM
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
      with:
        name: ${{ matrix.agent }}-sbom
        path: .

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

    - name: Login to GHCR
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Container Image Metadata
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/fts/${{ matrix.agent }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and Push Container Image
      id: push
      uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6
      with:
        context: ${{ matrix.agent }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Install cosign
      uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3

    - name: Sign Image
      env:
        IMAGE_REF: ghcr.io/${{ github.repository_owner }}/fts/${{ matrix.agent }}@${{ steps.push.outputs.digest }}
      run: cosign sign --yes "${IMAGE_REF}"

    - name: Attest Image SBOM
      env:
        IMAGE_REF: ghcr.io/${{ github.repository_owner }}/fts/${{ matrix.agent }}@${{ steps.push.outputs.digest }}
      run: cosign attest --yes --predicate "sbom.json" --type cyclonedx "${IMAGE_REF}"

    - name: Output Image Digest
      id: digest
      run: echo "${{ matrix.agent }}-digest=${{ steps.push.outputs.digest }}" >>"$GITHUB_OUTPUT"
    outputs:
      clinical-domain-agent-digest: ${{ steps.digest.outputs.clinical-domain-agent-digest }}
      trust-center-agent-digest: ${{ steps.digest.outputs.trust-center-agent-digest }}
      research-domain-agent-digest: ${{ steps.digest.outputs.research-domain-agent-digest }}

  attest-image:
    needs: [ push-image ]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write
      packages: write # for uploading attestations.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ghcr.io/${{ github.repository_owner }}/fts/${{ matrix.agent }}
      digest: ${{ needs.push-image.outputs[format('{0}-digest', matrix.agent)] }}
      registry-username: ${{ github.actor }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        agent: [ clinical-domain-agent, trust-center-agent, research-domain-agent ]

  create-release:
    needs: [ push-image ]
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: .github/release
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Check Link Targets
      run: make check-links

    - name: Create Release Archives
      id: create
      env:
        COMMIT_TAG: ${{ github.ref_type == 'tag' && github.ref_name || '' }}
        CD_AGENT_DIGEST: ${{ needs.push-image.outputs.clinical-domain-agent-digest }}
        TC_AGENT_DIGEST: ${{ needs.push-image.outputs.trust-center-agent-digest }}
        RD_AGENT_DIGEST: ${{ needs.push-image.outputs.research-domain-agent-digest }}
      run: |
        make cd-agent tc-agent rd-agent
        echo "checksums-b64=$(cat *.tar.gz.sha256 | xargs -L1 bash -c 'echo -n "{\"$(echo $1 | cut -d. -f1)\": \"$(echo "$0 $1" | base64 -w0)\"}"' | jq -sc 'add')" >>"$GITHUB_OUTPUT"
        echo "files=$(ls *.tar.gz.sha256 | cut -d. -f1 | jq -Rnc '[inputs]')" >>"$GITHUB_OUTPUT"

    - name: Upload Release Archives
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: release-archives
        path: |
          .github/release/*.tar.gz
          .github/release/*.tar.gz.sha256
        if-no-files-found: error
        retention-days: 7

    outputs:
      checksums-b64: ${{ steps.create.outputs.checksums-b64 }}
      files: ${{ steps.create.outputs.files }}

  attest-release:
    needs: [ create-release ]
    permissions:
      actions: read
      contents: write
      id-token: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    strategy:
      matrix:
        file: ${{ fromJson(needs.create-release.outputs.files) }}
    with:
      base64-subjects: ${{ fromJson(needs.create-release.outputs.checksums-b64)[matrix.file] }}
      upload-assets: false

  publish-release:
    needs: [ attest-release, push-image ]
    runs-on: ubuntu-24.04
    if: github.ref_type == 'tag'
    permissions:
      contents: write
    steps:
    - name: Download Release Archives
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: release-archives
        path: .

    - name: Download Provenance
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        pattern: "*-agent.tar.gz.intoto.jsonl"
        merge-multiple: true
        path: .

    - name: Recognize Prerelease
      env:
        GITHUB_REF: ${{ github.ref_name }}
      # In SemVer 2.0, a prerelease version is always indicated by the presence of a hyphen
      run: |
        if [[ "${GITHUB_REF}" == *-* ]]; then
          echo "is_prerelease=true" >>$GITHUB_ENV
        fi

    - name: Release
      uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2
      with:
        files: |
          *.tar.gz
          *.tar.gz.sha256
          *.tar.gz.intoto.jsonl
        draft: true
        prerelease: ${{ env.is_prerelease }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
