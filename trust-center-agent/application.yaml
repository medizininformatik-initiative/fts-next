### Spring Logging Configuration
##! https://medizininformatik-initiative.github.io/fts-next/configuration/logging
# logging.level:
#   # Log level for the care.smith.fts package
#   care.smith.fts: INFO

### De-Identification Configuration
##! https://medizininformatik-initiative.github.io/fts-next/configuration/de-identification
# deIdentification:
#   # Keystore URL, when using the default compose file the default should suffice
#   keystoreUrl: redis://keystore:6379
#   # gPAS FHIR gateway configuration
#   gpas.fhir:
#     baseUrl: http://gpas:8080/ttp-fhir/fhir/gpas
#     auth: [ ... ]
#     ssl: [ ... ]
#   # Time-To-Live for transport pseudonyms
#   transport.ttl: PT10M

### Consent Configuration
##! https://medizininformatik-initiative.github.io/fts-next/configuration/consent
# consent:
### GICS FHIR gateway configuration
#   gics.fhir:
#     baseUrl: http://gics:8080/ttp-fhir/fhir/gics
#     auth: [ ... ]
#     ssl: [ ... ]

### Spring SSL Bundle Configuration
##! https://medizininformatik-initiative.github.io/fts-next/configuration/ssl-bundles
# spring.ssl.bundle:
#   pem:
#     server:
#       keystore:
#         # Path to the server's SSL certificate and corresponding private key
#         certificate: file:/path/to/server.crt
#         private-key: file:/path/to/server.key
#         private-key-password: password
#       truststore:
#         # Path to the certificate authority (CA) certificate for server-side trust
#         certificate: file:/path/to/ca.crt
#     client:
#       keystore:
#         # Path to the client's SSL certificate and corresponding private key
#         certificate: file:/path/to/client-default.crt
#         private-key: file:/path/to/client-default.key
#         private-key-password: password
#       truststore:
#         # Path to the certificate authority (CA) certificate for client-side trust
#         certificate: file:/path/to/ca.crt

### Spring Server Configuration
##! https://medizininformatik-initiative.github.io/fts-next/configuration/server
# server:
#   ssl:
#     # Use the server SSL bundle configuration defined above
#     bundle: server
#     # Specify client authentication requirement: 'want' means optional
#     client-auth: want
#     # Specify client authentication requirement: 'need' means required
#     client-auth: need
#   # Use if running behind a reverse proxy (e.g. to respect Forwarded / X-Forwarded-* headers)
#   forward-headers-strategy: framework

### Spring WebFlux Base Path
##! https://medizininformatik-initiative.github.io/fts-next/configuration/webflux
# spring:
#   # Prefix for all API routes (useful if the agent is served under a subpath)
#   webflux.base-path: /

### FTS Server Security Configuration
##! https://medizininformatik-initiative.github.io/fts-next/configuration/security
# security:
#   endpoints:
#   # Define secured endpoint paths and their required roles
#   - path: /api/v2/cd/**
#     role: cd
#   - path: /api/v2/rd/**
#     role: rd
##! https://medizininformatik-initiative.github.io/fts-next/configuration/security/basic
#   auth.basic:
#     users:
#     - # Define basic authentication user
#       username: client
#       # BCrypt hashed password for the user
#       password: "{bcrypt}$2a$10$4i1TQpnBlcKOdUYO9O850.jJ8yGO8x9fQuu/l3Ki3HXgv0t9NOr4y"
#       # Optionally include an unencrypted password
#       password: "{noop}2mXA742aw7CGaLU6"
#       # Role assigned to the user
#       role: client
##! https://medizininformatik-initiative.github.io/fts-next/configuration/security/oauth2
#   auth.oauth2:
#     issuer: http://localhost:8080/realms/fts
##! https://medizininformatik-initiative.github.io/fts-next/configuration/security/client-certs
#   auth.clientCert:
#     users:
#     - # Define client certificate-based authentication user
#       username: default
#       # Role assigned to the user
#       role: client

### Spring OAuth2 Client Security Configuration
##! https://medizininformatik-initiative.github.io/fts-next/configuration/oauth2-client
#   spring.security.oauth2:
#     client:
#       registration:
#         cd-agent:
#           authorization-grant-type: client_credentials
#           client-id: cd-client
#           client-secret: tIQfOvBuhyR1dw9OQ3E4tCeTvcHtiW84
#           provider: keycloak
#         rd-agent:
#           authorization-grant-type: client_credentials
#           client-id: rd-client
#           client-secret: tIQfOvBuhyR1dw9OQ3E4tCeTvcHtiW84
#           provider: keycloak
#       provider:
#         keycloak:
#           issuer-uri: http://localhost:8080/realms/fts

### Monitoring
##! https://medizininformatik-initiative.github.io/fts-next/configuration/observability
# management:
#   endpoints:
#     web:
#       exposure:
#         # Define which management endpoints are accessible via web
#         include: [ "health", "info", "prometheus" ]
#   metrics:
#     distribution:
#       slo:
#         # Service Level Objectives (SLO) for server-side HTTP request response times (in milliseconds)
#         http.server.requests: 25,100,250,500,1000,10000
#         # Service Level Objectives (SLO) for client-side HTTP request response times (in milliseconds)
#         http.client.requests: 25,100,250,500,1000,2000,3000,4000,5000,6000,7000,8000,9000,10000
